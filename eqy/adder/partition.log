
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.41+8 (git sha1 1a54e8d47, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os)

-- Executing script file `partition.ys' --

1. Executing RTLIL frontend.
Input filename: combined.il

2. Executing INSBUF pass (insert buffer cells for connected wires).

3. Executing EQY PARTITION task.

3.1. Processing module pair gold.adder / gate.adder.

3.1.1. Processing matched IDs for module adder.

3.1.2. Create fragment partitions for module adder.
Adding output bit \sum to partition 0.
Adding output bit \carry to partition 1.

Final list of fragment partitions:
  0 \sum <= \a \b
  1 \carry <= \a \b

3.1.3. Execute partitioning commands for module adder.

Amending partitions:
Execute queued amend rules.
Find automatic amend rules.
  Checking partition 0:
    Found 0 po matches and 0 auto/pi matches.
  Checking partition 1:
    Found 0 po matches and 0 auto/pi matches.

Assigning partition names:
Automatically naming partition 0 'sum' using a PO name: sum
Automatically naming partition 1 'carry' using a PO name: carry

Partition Summary:
  Fragments:
       0: \sum
       1: \carry
  Partitions:
       0: sum
       1: carry
  Fragment-Partition-Matrix:
           0          
           01
       0   #.  sum
       1   .#  carry
  Legend for Fragment-Partition-Matrix:
      #  .... partition is this single fragment
      *  .... fragments merged into single partition
      +  .... fragments amended to the partition
      =  .... fragment is driving a partition input
      -  .... fragment is driving an amended fragment
      .  .... no relationship between fragment and partition
      ,  .... unused fragment index (as result of grouping)

3.1.4. Write partitions for module adder.
Adding non-output bit \a to partition 2.
Adding non-output bit \b to partition 2.
Adding output bit \carry to partition 2.
Adding output bit \sum to partition 2.
Writing partition 0 as adder.sum.
  partition pi bit 0: \a <-> \a
  partition pi bit 1: \b <-> \b
  partition po bit 0: \sum <-> \sum

3.1.5. Executing RTLIL backend.
Output filename: partitions/adder.sum.il
<suppressed ~80 debug messages>

3.1.6. Executing CHECK pass (checking for obvious problems).
Checking module gate.adder.sum...
Checking module gold.adder.sum...
Found and reported 0 problems.

Writing partition 1 as adder.carry.
  partition pi bit 0: \a <-> \a
  partition pi bit 1: \b <-> \b
  partition po bit 0: \carry <-> \carry

3.1.7. Executing RTLIL backend.
Output filename: partitions/adder.carry.il
<suppressed ~20 debug messages>

3.1.8. Executing CHECK pass (checking for obvious problems).
Checking module gate.adder.carry...
Checking module gold.adder.carry...
Found and reported 0 problems.

Writing partition 2 as adder.
  partition pi bit 0: \b <-> \b
  partition pi bit 1: \a <-> \a
  partition po bit 0: \sum <-> \sum
  partition po bit 1: \carry <-> \carry

3.1.9. Executing RTLIL backend.
Output filename: modules/adder.il
<suppressed ~32 debug messages>

End of script. Logfile hash: 4f078e635f, CPU: user 0.00s system 0.01s, MEM: 14.07 MB peak
Yosys 0.41+8 (git sha1 1a54e8d47, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os)
Time spent: 57% 1x eqy_partition (0 sec), 17% 2x read_ilang (0 sec), ...
